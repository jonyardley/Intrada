name: Update SQLx Cache

on:
  # Trigger when server files change
  push:
    paths:
      - 'server/**/*.rs'
      - 'server/migrations/**'
    branches: [main]
  
  # Allow manual triggering
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  update-sqlx-cache:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Need full history to create commits
          fetch-depth: 0
          # Use a personal access token to allow pushing
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust
        uses: ./.github/actions/setup-rust

      - name: Cache build
        uses: ./.github/actions/cache-cargo-build
        with:
          cache-key: 'sqlx-update-${{ runner.os }}'

      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          sudo -u postgres createuser -s runner
          sudo -u postgres createdb -O runner intrada
          
      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=postgresql://runner@localhost:5432/intrada" >> $GITHUB_ENV

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Run database migrations (if any)
        run: |
          if [ -d "server/migrations" ]; then
            cd server
            sqlx migrate run
          fi

      - name: Generate SQLx cache
        run: cargo sqlx prepare --workspace

      - name: Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain .sqlx/)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "SQLx cache files have changed"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to SQLx cache"
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .sqlx/
          git commit -m "ðŸ”§ Update SQLx query cache
          
          Auto-generated by GitHub Actions after server changes.
          This ensures CI/CD can compile with SQLx offline mode."
          git push
