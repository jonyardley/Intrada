name: Release to Vercel

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}

jobs:
  Vercel-Production-Deployment:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Cache Rust toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup/toolchains
          key: ${{ runner.os }}-rust-toolchain-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-toolchain-

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Setup Rust
        run: |
          rustup target add wasm32-unknown-unknown
          cargo clippy
          cargo fmt --check

      - name: Cache Trunk binary
        uses: actions/cache@v3
        with:
          path: ./trunk
          key: ${{ runner.os }}-trunk-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-trunk-

      - name: Download and install Trunk binary
        if: steps.cache-trunk.outputs.cache-hit != 'true'
        run: |
          wget -qO- https://github.com/trunk-rs/trunk/releases/download/v0.18.2/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf- -C ./trunk

      - name: Build with Trunk
        working-directory: ./web-leptos
        run: ./trunk/trunk build --release

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel & Display URL
        id: deployment
        working-directory: ./web-leptos/dist
        run: |
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} >> $GITHUB_STEP_SUMMARY
          echo $GITHUB_STEP_SUMMARY