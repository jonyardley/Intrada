name: Build, Test & Deploy to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Rust toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup/toolchains
          key: ${{ runner.os }}-rust-toolchain-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-toolchain-

      - name: Set up Rust
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup install stable
          rustup default stable
          rustup component add rustfmt clippy

      - name: Cache cargo-nextest installation
        uses: actions/cache@v3
        id: cache-cargo-nextest
        with:
          path: ~/.cargo/bin/cargo-nextest
          key: ${{ runner.os }}-cargo-nextest-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-nextest-

      - name: Install cargo-nextest
        if: steps.cache-cargo-nextest.outputs.cache-hit != 'true'
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-nextest
          locked: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Cache trunk installation
        id: cache-trunk
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-trunk-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bin-trunk-

      - name: Install Trunk
        if: steps.cache-trunk.outputs.cache-hit != 'true'
        run: cargo install trunk --force

      - name: Verify Trunk installation
        run: trunk --version

      - name: Build with Trunk
        run: trunk build --release
        working-directory: ./web-leptos

      - name: Verify dist directory
        run: ls -la ./web-leptos/dist

      - name: Run Shared tests
        run: cargo nextest run --release -p shared

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./web-leptos/dist
          retention-days: 1

  Vercel-Production-Deployment:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./web-leptos/dist

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel & Display URL
        id: deployment
        working-directory: ./web-leptos/dist
        run: |
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} >> $GITHUB_STEP_SUMMARY
          echo $GITHUB_STEP_SUMMARY

  Vercel-Preview-Deployment:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: preview
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./web-leptos/dist

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Preview & Display URL
        id: deployment
        working-directory: ./web-leptos/dist
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} >> $GITHUB_STEP_SUMMARY
          echo $GITHUB_STEP_SUMMARY
